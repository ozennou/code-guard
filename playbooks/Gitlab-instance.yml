- name: Install GitLab EE
  hosts: gitlab-instance
  become: true
  vars:
    env_file: "/tmp/.env" 

  tasks:
    - name: Copy .env file to remote server
      copy:
        src: "./.env"
        dest: "/tmp/.env"   
    
    - name: Get env file content
      slurp:
        src: /tmp/.env
      register: env_file

    - name: Parse environment
      set_fact:
        env_vars: "{{ ('{' + (env_file.content | b64decode).split('\n') | select | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

    - name: Update and Install the Dependencies
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: [curl, openssh-server, ca-certificates, tzdata, perl, apt-transport-https, software-properties-common, wget]

    - name: Add GitLab EE package repo
      shell: curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | bash

    - name: Ensure the existance of /etc/gitlab directory
      file:
        path: /etc/gitlab
        state: directory

    - name: Copy gitlab.rb file
      copy:
        src: ./gitlab.rb
        dest: /etc/gitlab/gitlab.rb
        owner: root
        group: root
        mode: '0644'

    - name: Install GitLab EE package
      apt:
        name: gitlab-ee
        state: present
        update_cache: yes

    - name: Add Grafana GPG key
      shell: wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | sudo tee /usr/share/keyrings/grafana.gpg > /dev/null

    - name: Add Grafana repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/grafana.gpg] https://apt.grafana.com stable main"
        state: present
        filename: grafana

    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Configure Grafana admin credentials
      lineinfile:
        path: /etc/grafana/grafana.ini
        regexp: "^;?admin_{{ item.key }} *="
        line: "admin_{{ item.key }} = {{ item.value }}"
        insertafter: "^[security]"
      loop:
        - { key: "user", value: "{{ env_vars['GF_SECURITY_ADMIN_USER'] }}" }
        - { key: "password", value: "{{ env_vars['GF_SECURITY_ADMIN_PASSWORD'] }}" }

    - name: Start grafana service
      systemd:
        name: grafana-server
        state: restarted
        daemon_reload: yes 